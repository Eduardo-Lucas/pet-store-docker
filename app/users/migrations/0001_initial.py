# Generated by Django 4.1.7 on 2023-05-10 20:09

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_veterinarian', models.BooleanField(default=False)),
                ('is_tutor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Veterinario',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('nome', models.CharField(max_length=100)),
                ('nome_clinica', models.CharField(blank=True, max_length=100, null=True)),
                ('celular', models.CharField(blank=True, max_length=14, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='veterinario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'veterinarios',
            },
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('nome', models.CharField(max_length=100)),
                ('celular', models.CharField(blank=True, max_length=14, null=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True)),
                ('rg', models.CharField(blank=True, max_length=14, null=True)),
                ('rua', models.CharField(blank=True, max_length=14, null=True)),
                ('numero', models.CharField(blank=True, max_length=14, null=True)),
                ('complemento', models.CharField(blank=True, max_length=14, null=True)),
                ('bairro', models.CharField(blank=True, max_length=14, null=True)),
                ('cidade', models.CharField(blank=True, max_length=14, null=True)),
                ('uf', models.CharField(blank=True, choices=[('RJ', 'Rj'), ('ES', 'Es'), ('MG', 'Mg'), ('SP', 'Sp'), ('RS', 'Rs'), ('SC', 'Sc'), ('PR', 'Pr'), ('DF', 'Df'), ('GO', 'Go'), ('MT', 'Mt'), ('MS', 'Ms'), ('TO', 'To'), ('AM', 'Am'), ('PA', 'Pa'), ('AC', 'Ac'), ('RR', 'Rr'), ('RO', 'Ro'), ('AP', 'Ap'), ('MA', 'Ma'), ('PI', 'Pi'), ('CE', 'Ce'), ('RN', 'Rn'), ('PB', 'Pb'), ('PE', 'Pe'), ('AL', 'Al'), ('SE', 'Se'), ('BA', 'Ba')], default='RJ', max_length=14, null=True)),
                ('observacao', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tutor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tutores',
            },
        ),
    ]
